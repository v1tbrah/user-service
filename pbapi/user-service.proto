syntax = "proto3";

package pbapi;

option go_package = "user-service/pbapi";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}

  rpc CreateInterest(CreateInterestRequest) returns (CreateInterestResponse) {}
  rpc GetInterest(GetInterestRequest) returns (GetInterestResponse) {}
  rpc GetAllInterests(Empty) returns (GetAllInterestsResponse) {}
  // TODO GetInterestsByUser
  // TODO AddInterestToUser
  // TODO AddInterestsListToUser

  rpc CreateCity(CreateCityRequest) returns (CreateCityResponse) {}
  rpc GetCity(GetCityRequest) returns (GetCityResponse) {}
  rpc GetAllCities(Empty) returns (GetAllCitiesResponse) {}
  // TODO UpdateCityToUser
  // TODO GetCityByUser
}


message Empty {}


message CreateUserRequest {
  string name = 1;
  string surname = 2;
  repeated int64 interestsID = 3;
  int64  cityID = 4;
}

message CreateUserResponse {
  int64 id = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  string name = 1;
  string surname = 2;
  repeated int64 interestsID = 3;
  int64 cityID = 4;
}



message CreateInterestRequest {
  string name = 1;
}

message CreateInterestResponse {
  int64 id = 1;
}

message GetInterestRequest {
  int64 id = 1;
}

message GetInterestResponse {
  Interest interest = 1;
}

message GetAllInterestsResponse {
  repeated Interest interests = 1;
}

message Interest {
  int64 id = 1;
  string name = 2;
}



message CreateCityRequest {
  string name = 1;
}

message CreateCityResponse {
  int64 id = 1;
}

message GetCityRequest {
  int64 id = 1;
}

message GetCityResponse {
  City city = 1;
}

message GetAllCitiesResponse {
  repeated City cities = 1;
}

message City {
  int64 id = 1;
  string name = 2;
}



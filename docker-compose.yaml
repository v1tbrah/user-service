version: '3.8'

networks:
  default-network:
    driver: bridge

volumes:
  user-storage: {}

services:

  user-service:
    container_name: user-service
    depends_on:
      user-service-storage-migrate:
        condition: service_completed_successfully
    build:
      dockerfile: Dockerfile
    environment:
      - GRPC_HOST=0.0.0.0
      - GRPC_PORT=6060
      - LOG_LVL=info
      - STORAGE_HOST=user-service-storage
      - STORAGE_PORT=5432
      - STORAGE_USER=postgres
      - STORAGE_PASSWORD=password
      - USER_DB_NAME=users
    ports:
      - "6060:6060"
    networks:
      - default-network

  user-service-storage:
    image: postgres:alpine
    container_name: user-service-storage
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 1s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - user-storage:/var/lib/postgresql/data
    networks:
      - default-network

  user-service-storage-migrate:
    image: migrate/migrate:v4.15.2 # Image page: <https://hub.docker.com/r/migrate/migrate>
    container_name: user-service-storage-migrate
    volumes: [ .:/src:ro ]
    working_dir: /src
    entrypoint: migrate -database "postgres://postgres:password@user-service-storage:5432/users?sslmode=disable" -source file://./migrations -verbose up
    depends_on:
      user-service-storage:
        condition: service_healthy
    networks:
      - default-network
